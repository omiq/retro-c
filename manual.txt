This is a group of alternate cc65 configurations for the Vic20 that
support using the computer's Low memory for extra data.  See the included
.cfg files for the names of the segments.  You can change the filenames in the
.cfg files to your liking.  Note that you must load the mentioned files at the
beginning of your main() function using load2().  The prototype is in load2.h,
and the function code is in loadstub.s.  #include the former in your main
module and compile the latter into your program.

Support is provided for several different memory configurations.  Just
choose the config that matches your needs.  You need to use the included
vic20_crt0_cfg2.s file in your programs.  It includes the starting addresses
of the stubs and disables rarely-needed functions.

BTW, this version supports using zeropage for stub data.  If you use extra
zeropage as zeropage, set the __ZP2START__ symbol in the .cfg file to the
start of the unused zeropage space.  You can load the stub as the other stubs.

Tips:

*	If you don't need to clear bss memory, you can disable the jsr
	zerobss line in the included crt0.s file.  If you don't need to
	initialize the used run-time functions, you can disable the jsr
	initlib and jsr donelib lines.
*	Fill in the low memory segments in the config files one at a time and
	add new calls to load2() in main() as needed.  This way, you may
	need fewer stubs.

Coming soon:

*	An alternate loader that loads files with all but the last letter the
	same and the last character the number of the file to load and
	increments the last number.